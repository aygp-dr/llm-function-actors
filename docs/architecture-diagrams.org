* LLM Function Calling Architecture Diagrams

** Decision Flow Diagram

#+begin_src mermaid :file llm-function-calling-flow.png :exports results :tangle llm-function-calling-flow.mmd :comments no
graph TD
    A[User Prompt] --> B{Analyze Intent}
    B --> C{Tool Relevant?}
    
    C -->|Yes| D[Select Tool]
    C -->|No| E[Direct Response]
    
    D --> F{Parameters Clear?}
    F -->|Yes| G[Call Function]
    F -->|No| H[Ask Clarification]
    
    G --> I{Need More Tools?}
    I -->|Yes| D
    I -->|No| J[Generate Response]
    
    H --> K[User Clarifies]
    K --> F
    
    E --> L[Return Answer]
    J --> L
    
    style A fill:#f9f,stroke:#333,stroke-width:2px
    style L fill:#9f9,stroke:#333,stroke-width:2px
    style C fill:#ff9,stroke:#333,stroke-width:2px
    style I fill:#ff9,stroke:#333,stroke-width:2px
#+end_src

** Sequence Diagram

#+begin_src mermaid :file llm-function-calling-sequence.png :exports results :tangle llm-function-calling-sequence.mmd :comments no
sequenceDiagram
    participant User
    participant App as Application Actor
    participant LLM as LLM Actor
    participant Registry as Function Registry
    
    Note over User,Registry: Setup Phase
    App->>Registry: Register Functions
    Registry-->>App: Functions Available
    
    Note over User,Registry: Interaction Phase
    User->>App: Send Prompt
    App->>App: Add Function Definitions
    App->>LLM: Prompt + Available Functions
    
    Note over LLM: Decision Point
    alt Needs Function
        LLM->>App: Request Function Call<br/>(name + arguments)
        App->>Registry: Lookup Function
        Registry-->>App: Function Reference
        App->>App: Execute Function
        App->>LLM: Return Result
        LLM->>LLM: Process Result
        LLM->>App: Final Answer
    else Direct Answer
        LLM->>App: Final Answer
    end
    
    App->>User: Response
    
    Note over User,Registry: Optional: Multiple Function Calls
    opt Additional Tools Needed
        LLM->>App: Request Another Function
        App->>App: Execute
        App->>LLM: Result
        Note right of LLM: Loop until complete
    end
#+end_src

** Key Components

- *User*: Initiates requests with prompts
- *Application Actor*: Manages function registry and execution
- *LLM Actor*: Decides whether to call functions or respond directly
- *Function Registry*: Stores available functions and their implementations

** Flow Description

1. *Setup Phase*: Application registers available functions
2. *Request Phase*: User sends prompt, app adds function definitions
3. *Decision Phase*: LLM analyzes request and available functions
4. *Execution Phase*: If needed, LLM requests function execution
5. *Response Phase*: Final answer is sent back to user
6. *Loop*: Multiple function calls possible in single interaction